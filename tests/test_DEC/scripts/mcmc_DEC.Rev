# 
# This script tests the basic functionality of the dnPhyloCTMCClado object
# along with the Dispersal-Extirpation-Cladogenesis model objects.
#
# Michael Landis, Yale University
# michael.landis@yale.edu
#

seed(12345)

# read data
phy = readTrees("data/primates.DEC.tre")[1]
#phy = readTrees("data/primates_small.tre")[1]
dat_01 = readDiscreteCharacterData(file="data/primates_n3.DEC.nex")
n_areas <- dat_01.nchar()
n_states <- 2^n_areas
dat_n = formatDiscreteCharacterData(dat_01, "DEC", n_states)

# dispersal/extinction rates
dr_base ~ dnExp(1)
dr_base.setValue(1)

er_base ~ dnExp(1)
er_base.setValue(1)

for (i in 1:n_areas) {
    for (j in 1:n_areas) {
        er[i][j] <- abs(0.)
        dr[i][j] := dr_base
    }
    er[i][i] := er_base
}

# rate matrix
q := fnDECRateMatrix(dispersalRates=dr,
                     extirpationRates=er,
                     nullRange="Include")

# biogeographic clock scaler
br <- 0.01

# classic DEC events: subset-sympatry and allopatry
event_probs ~ dnDirichlet( [1,1] )
event_probs.setValue(simplex(1,1))
event_types = ["s", "a"]
prob_type="pattern"
cp := fnCladoProbs(eventProbs=event_probs,
                   eventTypes=event_types,
                   numCharacters=n_areas,
                   probType=prob_type,
                   widespreadAllopatry=false)

rf <- simplex(rep(1,n_states))

seq ~ dnPhyloCTMCClado(tree=phy,
                       Q=q,
                       cladoProbs=cp,
                       branchRates=br,
                       rootFrequencies=rf,
                       nSites=1,
                       type="NaturalNumbers")

seq.clamp(dat_n)


mv[1] = mvScale(dr_base)
mv[2] = mvScale(er_base)
mv[3] = mvSimplexElementScale(event_probs, alpha=20)

#mn[1] = mnStochasticVariable(filename="output/mcmc_DEC.out",printgen=1,separator=TAB)
mn[1] = mnFile(dr_base, er_base, event_probs, filename="output/mcmc_DEC.out",printgen=1,separator=TAB)

mdl = model(er)

ch = mcmc(mdl, mv, mn, moveschedule="single")
ch.run(generations=1000)


# plot likelihoods for different rates
branch_rates <- [0.01, 0.05, 0.1, 0.5]

"\n"
"Settings"
"========"

"\n"
"branch_rates (d=e)"
branch_rates

"\n"
"Q"
q
#"NOTE: Q is scaled by " + unrescale + " * branch_rates[i] when computing model lnL"

"\n"
"Cladogenesis event probabilities"
"(s,a)=("+event_probs[1]+","+event_probs[2]+")"

"\n"
"Model likelihood"
"================"
"\n"
"rate=d=e    lnLike (w/o root freqs)"
for (i in 1:branch_rates.size()) {
    br <- branch_rates[i]
    branch_rates[i] + "    " + (seq.lnProbability()-ln(1./2^n_areas))
}

# quit
q()
