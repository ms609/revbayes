################################################################################
#
# RevBayes Validation Test: Normal Distribution
#
# Model: 10 random variable from an normal distribution with
#        a uniform prior on the mean and exponential prior on
#        the standard deviation.
#
# Inference: MCMC algorithm with the following moves:
#           - mvSlide
#           - mvScale
#
# Authors: Sebastian Hoehna
#
################################################################################

## Global settings

NUM_VALIDATION_REPLICATES = 1000
NUM_MCMC_ITERATIONS       = 10000


# create the monitor and moves vectors
moves     = VectorMoves()
monitors  = VectorMonitors()


n_samples = 10

mu ~ dnUniform( -10, 10 )
sigma ~ dnExponential( 1.0 )

moves.append( mvSlide(mu) )
moves.append( mvScale(sigma) )

for (i in 1:n_samples ) {
   x[i] ~ dnNormal(mu,sigma)
   x[i].clamp( 100.0 )
}

mymodel = model(mu)


mymcmc = mcmc(mymodel, monitors, moves)

validation = validationAnalysis( mymcmc, NUM_VALIDATION_REPLICATES, directory="output_normal" )
validation.burnin(generations=0.1*NUM_MCMC_ITERATIONS,tuningInterval=100)
validation.run(generations=NUM_MCMC_ITERATIONS)
validation.summarize(coverageProbability=0.9)
validation.summarize(coverageProbability=0.5)


# you may want to quit RevBayes now
q()
