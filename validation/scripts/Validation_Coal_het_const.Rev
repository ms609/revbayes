################################################################################
#
# RevBayes Validation Test: Constant-rate coalescent process
#
# Model: Constant population size coalescent process on a fixed tree.
#
#
# authors: Sebastian Hoehna
#
################################################################################

## Global settings

NUM_VALIDATION_REPLICATES = 1000
NUM_MCMC_ITERATIONS       = 10000


# create the monitor and moves vectors
moves     = VectorMoves()
monitors  = VectorMonitors()


#######################
# Reading in the Data #
#######################

taxa <- readTaxonData("data/bears_taxa.tsv")

# Get the names of the taxa in the tree and the age of the tree. We need these later on.
n_taxa <- taxa.size()


##############
# Tree model #
##############

pop_size ~ dnUniform(0,1E3)
moves.append( mvScale(pop_size, lambda=0.1, tune=true, weight=2.0) )


### the time tree is a stochastic node modeled by the constant-rate coalescent process (dnCoalescent)
psi ~ dnHeterochronousCoalescent(theta=pop_size, taxa=taxa)
psi.clamp( psi )

#############
# The Model #
#############


### workspace model wrapper ###
mymodel = model(psi)



################
# The Analysis #
################

mymcmc = mcmc(mymodel, monitors, moves)


validation = validationAnalysis( mymcmc, NUM_VALIDATION_REPLICATES, directory="output_Coal_het_const" )
validation.burnin(generations=0.1*NUM_MCMC_ITERATIONS,tuningInterval=100)
validation.run(generations=NUM_MCMC_ITERATIONS)
validation.summarize(coverageProbability=0.9)
validation.summarize(coverageProbability=0.5)


# you may want to quit RevBayes now
q()
