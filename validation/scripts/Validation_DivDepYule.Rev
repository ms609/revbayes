################################################################################
#
# RevBayes Validation Test
#
# Model: A diversity-dependent Yule process with complete taxon sampling.
#
#
# authors: Sebastian Hoehna
#
################################################################################

## Global settings

NUM_VALIDATION_REPLICATES = 1000
NUM_MCMC_ITERATIONS       = 10000

# create the monitor and moves vectors
moves     = VectorMoves()
monitors  = VectorMonitors()


#######################
# Reading in the Data #
#######################

# read in the tree which is our observation
tree <- readTrees( "data/primates.tree" )[1]

# Get some useful variables from the data. We need these later on.
taxa <- tree.taxa()



##############
# Tree model #
##############

# Specify a prior on the diversification and turnover rate
lambda  ~ dnLognormal(ln(0.01),sd=0.58)
K ~ dnUniformNatural(20,50)

# specify a prior on the root age (our informed guess is about 75-80 mya)
root <- tree.rootAge()


# create some moves that change the stochastic variables
# all moves are sliding proposals but you could use scaling proposals for the rates too
moves.append( mvSlide(lambda,delta=1,weight=2) )
moves.append( mvRandomNaturalWalk(K,weight=2) )
moves.append( mvRandomGeometricWalk(K,weight=2) )

# construct a variable for the tree drawn from a birth death process
psi ~ dnDiversityDependentYule(lambda=lambda, capacity=K, rootAge=abs(root), taxa=taxa, condition="time" )

psi.clamp( tree )




#############
# The Model #
#############

# We define our model.
# We can use any node of our model as a handle, here we chose to use the rate matrix.
mymodel = model( root )


mymcmc = mcmc(mymodel, monitors, moves)


validation = validationAnalysis( mymcmc, NUM_VALIDATION_REPLICATES, directory="output_DDY" )
validation.burnin(generations=0.1*NUM_MCMC_ITERATIONS,tuningInterval=100)
validation.run(generations=NUM_MCMC_ITERATIONS)
validation.summarize(coverageProbability=0.9)
validation.summarize(coverageProbability=0.5)


# you may want to quit RevBayes now
q()
